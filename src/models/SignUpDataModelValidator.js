import * as Specs from './specs';
import { ValidatorVisitor } from './ValidatorVisitor';
import { fromI10n } from '../lib/GlobalState';

export class SignUpDataModelValidator extends ValidatorVisitor {
  validations = {
    firstName: [
      Specs.MandatoryStringSpec(
        this.model,
        'firstName',
        fromI10n('sign-up--initial.name')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        200,
        'firstName',
        fromI10n(['sign-up--initial.name'])
      )
    ],
    lastName: [
      Specs.MandatoryStringSpec(
        this.model,
        'lastName',
        fromI10n('sign-up--initial.lastName')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        200,
        'lastName',
        fromI10n('sign-up--initial.lastName')
      )
    ],
    email: [
      Specs.MandatoryStringSpec(
        this.model,
        'email',
        fromI10n('sign-up--initial.email')
      ),
      Specs.StringMinLengthSpec(
        this.model,
        6,
        'email',
        fromI10n('sign-up--initial.email')
      ),
      Specs.EmailSpec(this.model, 'email', fromI10n('sign-up--initial.email'))
    ],
    password: [
      Specs.MandatoryStringSpec(
        this.model,
        'password',
        fromI10n('sign-up--initial.password')
      ),
      Specs.SameStringSpec(
        this.model,
        'password',
        'password2',
        'Las contrase√±as no coinciden.'
      ),
      Specs.PasswordStrengthSpec(
        this.model,
        'password',
        fromI10n('sign-up--initial.password')
      )
    ],
    password2: [
      Specs.MandatoryStringSpec(
        this.model,
        'password2',
        fromI10n('sign-up--initial.password')
      )
    ],
    companyName: [
      Specs.MandatoryStringSpec(
        this.model,
        'companyName',
        fromI10n('sign-up--company.name')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        200,
        'companyName',
        fromI10n('sign-up--company.name')
      )
    ],
    province: [
      Specs.MandatorySelectionSpec(
        this.model,
        'province',
        fromI10n('sign-up--company.province')
      )
    ],
    city: [
      Specs.MandatoryStringSpec(
        this.model,
        'city',
        fromI10n('sign-up--company.city')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        200,
        'city',
        fromI10n('sign-up--company.city')
      )
    ],
    street: [
      Specs.MandatoryStringSpec(
        this.model,
        'street',
        fromI10n('sign-up--company.street')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        500,
        'street',
        fromI10n('sign-up--company.street')
      )
    ],
    streetNumber: [
      Specs.MandatoryStringSpec(
        this.model,
        'streetNumber',
        fromI10n('sign-up--company.streetNumber')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        35,
        'streetNumber',
        fromI10n('sign-up--company.streetNumber')
      )
    ],
    department: [
      Specs.MandatoryStringSpec(
        this.model,
        'department',
        fromI10n('sign-up--company.department')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        35,
        'department',
        fromI10n('sign-up--company.department')
      )
    ],
    postalCode: [
      Specs.MandatoryStringSpec(
        this.model,
        'postalCode',
        fromI10n('sign-up--company.postalCode')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        35,
        'postalCode',
        fromI10n('sign-up--company.postalCode')
      )
    ],
    creditCardNumber: [
      Specs.MandatoryStringSpec(
        this.model,
        'creditCardNumber',
        fromI10n('sign-up--payment-data.creditCardNumber')
      ),
      Specs.StringMinLengthSpec(
        this.model,
        16,
        'creditCardNumber',
        fromI10n('sign-up--payment-data.creditCardNumber')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        19,
        'creditCardNumber',
        fromI10n('sign-up--payment-data.creditCardNumber')
      ),
      Specs.IsNumberSpec(
        this.model,
        'creditCardNumber',
        fromI10n('sign-up--payment-data.creditCardNumber')
      )
    ],
    creditCardHolder: [
      Specs.MandatoryStringSpec(
        this.model,
        'creditCardHolder',
        fromI10n('sign-up--payment-data.creditCardHolder')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        200,
        'creditCardHolder',
        fromI10n('sign-up--payment-data.creditCardHolder')
      )
    ],
    creditCardCcv: [
      Specs.MandatoryStringSpec(
        this.model,
        'creditCardCcv',
        fromI10n('sign-up--payment-data.ccv')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        4,
        'creditCardCcv',
        fromI10n('sign-up--payment-data.ccv')
      ),
      Specs.StringMinLengthSpec(
        this.model,
        3,
        'creditCardCcv',
        fromI10n('sign-up--payment-data.ccv')
      )
    ],
    creditCardExpirationDate: [
      Specs.MandatoryStringSpec(
        this.model,
        'creditCardExpirationDate',
        fromI10n('sign-up--payment-data.expirationDate')
      ),
      Specs.StringMinLengthSpec(
        this.model,
        4,
        'creditCardExpirationDate',
        fromI10n('sign-up--payment-data.expirationDate')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        4,
        'creditCardExpirationDate',
        fromI10n('sign-up--payment-data.expirationDate')
      )
    ],
    billingCompanyName: [
      Specs.MandatoryStringSpec(
        this.model,
        'billingCompanyName',
        fromI10n('sign-up--billing.name')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        200,
        'billingCompanyNamme',
        fromI10n('sign-up--billing.name')
      )
    ],
    billingCompanyIdentification: [
      Specs.MandatoryStringSpec(
        this.model,
        'billingCompanyIdentification',
        fromI10n('sign-up--billing.taxCode')
      ),
      Specs.StringMinLengthSpec(
        this.model,
        11,
        'billingCompanyIdentification',
        fromI10n('sign-up--billing.taxCode')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        11,
        'billingCompanyIdentification',
        fromI10n('sign-up--billing.taxCode')
      ),
      Specs.IsNumberSpec(
        this.model,
        'billingCompanyIdentification',
        fromI10n('sign-up--billing.taxCode')
      )
    ],
    billingProvince: [
      Specs.MandatorySelectionSpec(
        this.model,
        'billingProvince',
        fromI10n('sign-up--billing.province')
      )
    ],
    billingCity: [
      Specs.MandatoryStringSpec(
        this.model,
        'billingCity',
        fromI10n('sign-up--billing.city')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        200,
        'billingCity',
        fromI10n('sign-up--billing.city')
      )
    ],
    billingStreet: [
      Specs.MandatoryStringSpec(
        this.model,
        'billingStreet',
        fromI10n('sign-up--billing.street')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        500,
        'billingStreet',
        fromI10n('sign-up--billing.street')
      )
    ],
    billingStreetNumber: [
      Specs.MandatoryStringSpec(
        this.model,
        'billingStreetNumber',
        fromI10n('sign-up--billing.streetNumber')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        35,
        'billingStreetNumber',
        fromI10n('sign-up--billing.streetNumber')
      )
    ],
    billingDepartment: [
      Specs.MandatoryStringSpec(
        this.model,
        'billingDepartment',
        fromI10n('sign-up--billing.department')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        35,
        'billingDepartment',
        fromI10n('sign-up--billing.department')
      )
    ],
    billingPostalCode: [
      Specs.MandatoryStringSpec(
        this.model,
        'billingPostalCode',
        fromI10n('sign-up--billing.postalCode')
      ),
      Specs.StringMaxLengthSpec(
        this.model,
        35,
        'billingPostalCode',
        fromI10n('sign-up--billing.postalCode')
      )
    ]
  };
}
